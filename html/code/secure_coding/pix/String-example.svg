<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.40.1 (20161225.0304)
 -->
<!-- Title: %3 Pages: 1 -->
<svg viewBox="0.00 0.00 1000.00 700.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink"><script xmlns="">(function(){'use strict';

if( !window.__ECSY_DEVTOOLS_INJECTED ) {
	function compareVersions(v1, v2) {
    if (typeof v1 !== 'string') return false;
    if (typeof v2 !== 'string') return false;
    v1 = v1.split('.');
    v2 = v2.split('.');
    const k = Math.min(v1.length, v2.length);
    for (let i = 0; i &lt; k; ++ i) {
        v1[i] = parseInt(v1[i], 10);
        v2[i] = parseInt(v2[i], 10);
        if (v1[i] &gt; v2[i]) return 1;
        if (v1[i] &lt; v2[i]) return -1;
    }
    return v1.length == v2.length ? 0: (v1.length &lt; v2.length ? -1 : 1);
	}

	function sendMessage( type, data ) {
		if (window.__ECSY_REMOTE_DEVTOOLS_INJECTED &amp;&amp; window.__ECSY_REMOTE_DEVTOOLS.connection) {
			window.__ECSY_REMOTE_DEVTOOLS.connection.send({
				id: 'ecsy-devtools',
				method: type,
				data: JSON.stringify(data)
			});
		}
		window.postMessage({
			id: 'ecsy-devtools',
			method: type,
			data,
		}, '*');
	}

	window.addEventListener('ecsy-world-created', e =&gt; {
		if (!window.__ECSY_DEVTOOLS) {
			window.__ECSY_DEVTOOLS = {
				worlds: []
			};
		}

		var world = e.detail.world;
		var version = e.detail.version;
		if (!version || compareVersions(version, "0.1.4") &lt; 0) {
			console.info("ECSY detected but this version is not compatible with the devtools installed");
			return;
		}

		window.__ECSY_DEVTOOLS.worlds.push(world);
		window.__ECSY_DEVTOOLS.ecsyVersion = version;

		var stats = {
			processDeferredRemoval: 0
		};

		var _pools = {};

		var oriWorldExecute = world.execute;

		world.execute = function(delta, time) {
			oriWorldExecute.apply(world, arguments);
			window.__ECSY_DEVTOOLS.refreshStats();
		}

		window.__ECSY_DEVTOOLS.refreshStats = function() {
			let startTime = performance.now();
			const entityManager = world.entityManager;

			const deferredRemoval = {
				enabled: entityManager.deferredRemovalEnabled,
				executeTime: stats.processDeferredRemoval,
				entitiesToRemove: entityManager.entitiesToRemove.length,
				entitiesWithComponentsToRemove: entityManager.entitiesWithComponentsToRemove.length,
				totalComponentsToRemove: entityManager.entitiesWithComponentsToRemove.reduce((a, c) =&gt; a + c._ComponentTypesToRemove.length, 0)
			};

			const queries = Object.values(world.entityManager._queryManager._queries).map(q =&gt; q.toJSON());

			const systems = world.systemManager._systems.map(system =&gt; {
				let data = system.toJSON();
				for (name in data.queries) {
					var query = data.queries[name];
					var queryData = queries.find(q =&gt; q.key === query.key);
					query.numEntities = queryData.numEntities;
					query.components = queryData.components;
				}

				return data;
			});

			systems.sort((a, b) =&gt; {
				return a.priority - b.priority || a.order - b.order;
			});

			// Reset time for next step
			// @todo Do it on core?
			world.systemManager._systems.forEach(system =&gt; {
				system.executeTime = 0;
			});


			let componentsNum = world.componentsManager.numComponents;
			let components = {};
			for (let id in componentsNum) {
				var component = world.componentsManager.Components[id];
				const name = component.getName ? component.getName() : id;

				components[name] = {
					count: componentsNum[id],
					type: component.isTagComponent ? 'tag' :
								(component.isComponent ? 'component' :
								(component.isSystemStateComponent ? 'systemstate' : 'none'))
				};
			}

			let componentsPools = {};
			for (name in world.componentsManager._componentPool) {
				if (!_pools[name]) {
					_pools[name] = {
						lastPoolSize: 0
					};
				}

				let pool = world.componentsManager._componentPool[name];
				if (pool !== undefined) {
					var cName = pool.T.name;
					componentsPools[cName] = {
						valid: pool.isObjectPool,
						used: pool.totalUsed(),
						free: pool.totalFree(),
						size: pool.totalSize(),
						increased: pool.totalSize() &gt; _pools[name].lastPoolSize
					}
	
					_pools[name].lastPoolSize = pool.totalSize();	
				}
			};

			let data = {
				world: {
					enabled: world.enabled
				},
				lastExecutedSystem: world.systemManager.lastExecutedSystem ? world.systemManager.lastExecutedSystem.constructor.name : '',
				numEntities: world.entityManager._entities.length,
				systems: systems,
				queries: queries,
				components: components,
				deferredRemoval: deferredRemoval,
				componentsPools: componentsPools,
				ecsyVersion: version,
				statsComputeTime: performance.now() - startTime
			};
			sendMessage('refreshData', data);
		}

		sendMessage('worldCreated', {});
	});

	function log() {
		var args = Array.from( arguments );
		 args.unshift( 'background: #9999ff; color: #ffffff;' );
		args.unshift( `%c ECSY Injector ` );

		console.log.apply( console, args );
	}

	// log( 'ECSYInspector injected', document.location.href );

	window.__ECSY_DEVTOOLS_INJECTED = true;
}
})();</script>
<g id="graph0" class="graph" transform="scale(4.1667 4.1667) rotate(0) translate(4 152)">
<title>%3</title>
<polygon fill="#ffffff" stroke="transparent" points="-4,4 -4,-152 233,-152 233,4 -4,4"/>
<!-- table0 -->
<g id="node1" class="node">
<title>table0</title>
<polyline fill="none" stroke="#000000" points="8,-124 96,-124 "/>
<text text-anchor="start" x="45.7759" y="-129.8" font-family="Times,serif" font-size="14.00" fill="#000000">s1</text>
<polygon fill="none" stroke="#000000" points="8,-104 8,-124 60,-124 60,-104 8,-104"/>
<text text-anchor="start" x="18.8413" y="-109.8" font-family="Times,serif" font-size="14.00" fill="#000000">name</text>
<polygon fill="none" stroke="#000000" points="60,-104 60,-124 96,-124 96,-104 60,-104"/>
<text text-anchor="start" x="62.8413" y="-109.8" font-family="Times,serif" font-size="14.00" fill="#000000">value</text>
<polygon fill="none" stroke="#000000" points="8,-84 8,-104 60,-104 60,-84 8,-84"/>
<text text-anchor="start" x="26.2241" y="-89.8" font-family="Times,serif" font-size="14.00" fill="#000000">ptr</text>
<polygon fill="none" stroke="#000000" points="60,-84 60,-104 96,-104 96,-84 60,-84"/>
<polygon fill="none" stroke="#000000" points="8,-64 8,-84 60,-84 60,-64 8,-64"/>
<text text-anchor="start" x="25.4482" y="-69.8" font-family="Times,serif" font-size="14.00" fill="#000000">len</text>
<polygon fill="none" stroke="#000000" points="60,-64 60,-84 96,-84 96,-64 60,-64"/>
<text text-anchor="start" x="74.5" y="-69.8" font-family="Times,serif" font-size="14.00" fill="#000000">5</text>
<polygon fill="none" stroke="#000000" points="8,-44 8,-64 60,-64 60,-44 8,-44"/>
<text text-anchor="start" x="10.6826" y="-49.8" font-family="Times,serif" font-size="14.00" fill="#000000">capacity</text>
<polygon fill="none" stroke="#000000" points="60,-44 60,-64 96,-64 96,-44 60,-44"/>
<text text-anchor="start" x="74.5" y="-49.8" font-family="Times,serif" font-size="14.00" fill="#000000">5</text>
</g>
<!-- table1 -->
<g id="node2" class="node">
<title>table1</title>
<polygon fill="none" stroke="#000000" points="148.5,-104 148.5,-124 185.5,-124 185.5,-104 148.5,-104"/>
<text text-anchor="start" x="151.4482" y="-109.8" font-family="Times,serif" font-size="14.00" fill="#000000">index</text>
<polygon fill="none" stroke="#000000" points="185.5,-104 185.5,-124 221.5,-124 221.5,-104 185.5,-104"/>
<text text-anchor="start" x="188.3413" y="-109.8" font-family="Times,serif" font-size="14.00" fill="#000000">value</text>
<polygon fill="none" stroke="#000000" points="148.5,-84 148.5,-104 185.5,-104 185.5,-84 148.5,-84"/>
<text text-anchor="start" x="163.5" y="-89.8" font-family="Times,serif" font-size="14.00" fill="#000000">0</text>
<polygon fill="none" stroke="#000000" points="185.5,-84 185.5,-104 221.5,-104 221.5,-84 185.5,-84"/>
<text text-anchor="start" x="200" y="-89.8" font-family="Times,serif" font-size="14.00" fill="#000000">h</text>
<polygon fill="none" stroke="#000000" points="148.5,-64 148.5,-84 185.5,-84 185.5,-64 148.5,-64"/>
<text text-anchor="start" x="163.5" y="-69.8" font-family="Times,serif" font-size="14.00" fill="#000000">1</text>
<polygon fill="none" stroke="#000000" points="185.5,-64 185.5,-84 221.5,-84 221.5,-64 185.5,-64"/>
<text text-anchor="start" x="200.3931" y="-69.8" font-family="Times,serif" font-size="14.00" fill="#000000">e</text>
<polygon fill="none" stroke="#000000" points="148.5,-44 148.5,-64 185.5,-64 185.5,-44 148.5,-44"/>
<text text-anchor="start" x="163.5" y="-49.8" font-family="Times,serif" font-size="14.00" fill="#000000">2</text>
<polygon fill="none" stroke="#000000" points="185.5,-44 185.5,-64 221.5,-64 221.5,-44 185.5,-44"/>
<text text-anchor="start" x="201.5552" y="-49.8" font-family="Times,serif" font-size="14.00" fill="#000000">l</text>
<polygon fill="none" stroke="#000000" points="148.5,-24 148.5,-44 185.5,-44 185.5,-24 148.5,-24"/>
<text text-anchor="start" x="163.5" y="-29.8" font-family="Times,serif" font-size="14.00" fill="#000000">3</text>
<polygon fill="none" stroke="#000000" points="185.5,-24 185.5,-44 221.5,-44 221.5,-24 185.5,-24"/>
<text text-anchor="start" x="201.5552" y="-29.8" font-family="Times,serif" font-size="14.00" fill="#000000">l</text>
<polygon fill="none" stroke="#000000" points="148.5,-4 148.5,-24 185.5,-24 185.5,-4 148.5,-4"/>
<text text-anchor="start" x="163.5" y="-9.8" font-family="Times,serif" font-size="14.00" fill="#000000">4</text>
<polygon fill="none" stroke="#000000" points="185.5,-4 185.5,-24 221.5,-24 221.5,-4 185.5,-4"/>
<text text-anchor="start" x="200" y="-9.8" font-family="Times,serif" font-size="14.00" fill="#000000">o</text>
</g>
<!-- table0&#45;&gt;table1 -->
<g id="edge1" class="edge">
<title>table0:c-&gt;table1:pointee</title>
<path fill="none" stroke="#000000" d="M78,-94C78,-94 109.3406,-94 138.3797,-94"/>
<polygon fill="#000000" stroke="#000000" points="138.5,-97.5001 148.5,-94 138.5,-90.5001 138.5,-97.5001"/>
</g>
</g>
</svg>